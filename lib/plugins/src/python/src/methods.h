#pragma once

#include "analyzer.h"
#include "byteorder.h"
#include "common.h"
#include "loader.h"
#include "redasm.h"
#include "typing.h"
#include "utils.h"
#include <Python.h>

namespace python {

// clang-format off
inline PyMethodDef methods[] = {
    {"init", python::init, METH_NOARGS, nullptr},
    {"deinit", python::deinit, METH_NOARGS, nullptr},
    {"log", python::log, METH_O, nullptr},
    {"status", python::status, METH_O, nullptr},
    {"set_loglevel", python::set_loglevel, METH_O, nullptr},
    {"add_searchpath", python::add_searchpath, METH_O, nullptr},
    {"get_searchpaths", python::get_searchpaths, METH_NOARGS, nullptr},
    {"get_problems", python::get_problems, METH_NOARGS, nullptr},
    {"set_userdata", python::set_userdata, METH_VARARGS, nullptr},
    {"get_userdata", python::get_userdata, METH_O, nullptr},
    {"symbolize", python::symbolize, METH_O, nullptr},
    {"is_address", python::is_address, METH_O, nullptr},
    {"to_offset", python::to_offset, METH_O, nullptr},
    {"to_address", python::to_address, METH_O, nullptr},
    {"check_string", python::check_string, METH_O, nullptr},
    {"is_alnum", python::is_alnum, METH_O, nullptr},
    {"is_alpha", python::is_alpha, METH_O, nullptr},
    {"is_lower", python::is_lower, METH_O, nullptr},
    {"is_upper", python::is_upper, METH_O, nullptr},
    {"is_digit", python::is_digit, METH_O, nullptr},
    {"is_xdigit", python::is_xdigit, METH_O, nullptr},
    {"is_cntrl", python::is_cntrl, METH_O, nullptr},
    {"is_graph", python::is_graph, METH_O, nullptr},
    {"is_space", python::is_space, METH_O, nullptr},
    {"is_blank", python::is_blank, METH_O, nullptr},
    {"is_print", python::is_print, METH_O, nullptr},
    {"is_punct", python::is_punct, METH_O, nullptr},
    {"map_file", python::map_file, METH_VARARGS, nullptr},
    {"map_file_n", python::map_file_n, METH_VARARGS, nullptr},
    {"add_segment_n", python::add_segment_n, METH_VARARGS, nullptr},
    {"set_type", python::set_type, METH_VARARGS, nullptr},
    {"set_type_ex", python::set_type_ex, METH_VARARGS, nullptr},
    {"get_address", python::get_address, METH_O, nullptr},
    {"get_refsfrom", python::get_refsfrom, METH_O, nullptr},
    {"get_refsfromtype", python::get_refsfromtype, METH_VARARGS, nullptr},
    {"get_refsto", python::get_refsto, METH_O, nullptr},
    {"get_refstotype", python::get_refstotype, METH_VARARGS, nullptr},
    {"get_name", python::get_name, METH_O, nullptr},
    {"set_name", python::set_name, METH_VARARGS, nullptr},
    {"set_name_ex", python::set_name_ex, METH_VARARGS, nullptr},
    {"set_function", python::set_function, METH_O, nullptr},
    {"set_function_ex", python::set_function_ex, METH_O, nullptr},
    {"set_entry", python::set_entry, METH_VARARGS, nullptr},
    {"add_ref", python::add_ref, METH_VARARGS, nullptr},
    {"add_problem", python::add_problem, METH_VARARGS, nullptr},
    {"register_loader", python::register_loader, METH_VARARGS, nullptr},
    {"register_analyzer", python::register_analyzer, METH_VARARGS, nullptr},
    {"get_loaderplugin", python::get_loaderplugin, METH_NOARGS, nullptr},
    {"get_loader", python::get_loader, METH_NOARGS, nullptr},
    {"get_bool", python::get_bool, METH_O, nullptr},
    {"get_char", python::get_char, METH_O, nullptr},
    {"get_u8", python::get_u8, METH_O, nullptr},
    {"get_u16", python::get_u16, METH_O, nullptr},
    {"get_u32", python::get_u32, METH_O, nullptr},
    {"get_u64", python::get_u64, METH_O, nullptr},
    {"get_i8", python::get_i8, METH_O, nullptr},
    {"get_i16", python::get_i16, METH_O, nullptr},
    {"get_i32", python::get_i32, METH_O, nullptr},
    {"get_i64", python::get_i64, METH_O, nullptr},
    {"get_u16be", python::get_u16be, METH_O, nullptr},
    {"get_u32be", python::get_u32be, METH_O, nullptr},
    {"get_u64be", python::get_u64be, METH_O, nullptr},
    {"get_i16be", python::get_i16be, METH_O, nullptr},
    {"get_i32be", python::get_i32be, METH_O, nullptr},
    {"get_i64be", python::get_i64be, METH_O, nullptr},
    {"get_strz", python::get_strz, METH_O, nullptr},
    {"get_str", python::get_str, METH_VARARGS, nullptr},
    {"get_type", python::get_type, METH_VARARGS, nullptr},
    {"to_hex", python::to_cfunction(python::to_hex), METH_VARARGS | METH_KEYWORDS, nullptr},
    {"rol16", python::rol16, METH_VARARGS, nullptr},
    {"rol32", python::rol32, METH_VARARGS, nullptr},
    {"rol64", python::rol64, METH_VARARGS, nullptr},
    {"ror16", python::ror16, METH_VARARGS, nullptr},
    {"ror32", python::ror32, METH_VARARGS, nullptr},
    {"ror64", python::ror64, METH_VARARGS, nullptr},
    {"from_le16", python::from_le16, METH_O, nullptr},
    {"from_le32", python::from_le32, METH_O, nullptr},
    {"from_le64", python::from_le64, METH_O, nullptr},
    {"from_be16", python::from_be16, METH_O, nullptr},
    {"from_be32", python::from_be32, METH_O, nullptr},
    {"from_be64", python::from_be64, METH_O, nullptr},
    {"to_le16", python::to_le16, METH_O, nullptr},
    {"to_le32", python::to_le32, METH_O, nullptr},
    {"to_le64", python::to_le64, METH_O, nullptr},
    {"to_be16", python::to_be16, METH_O, nullptr},
    {"to_be32", python::to_be32, METH_O, nullptr},
    {"to_be64", python::to_be64, METH_O, nullptr},
    {"size_of", python::size_of, METH_O, nullptr},
    {"create_struct", python::create_struct, METH_VARARGS, nullptr},
    {},
};
// clang-format on

} // namespace python
